# Maintainer: RATIU5
pkgname=chronos-apple-studio-display
pkgver=0.0.1
pkgrel=1
pkgdesc="Essential drivers and utilities for Apple Studio Display hardware support on Wayland/Hyprland"
arch=('x86_64')
url="https://github.com/RATIU5/chronos"
license=(MIT)

depends=(
    'linux-headers'
    'linux-firmware'
    'libdrm'
    'libusb'
    'udev'
    'rust'
    'cargo'
    'ddcutil'
    'bolt'
    'mesa'
    'wayland'
    'wayland-protocols'
    'hyprland'
    'xdg-desktop-portal-hyprland'
)

optdepends=(
    'wdisplays: GUI for monitor configuration'
    'nwg-displays: Alternative GUI for monitor arrangement'
    'kanshi: Dynamic display configuration'
)

source=()

sha256sums=()

prepare() {
    # Enhanced udev rules for Apple Studio Display with better permissions
    cat > "${srcdir}/50-apple-studio-display.rules" << 'EOF'
# Apple Studio Display HID devices
KERNEL=="hiddev*", ATTRS{idVendor}=="05ac", ATTRS{idProduct}=="1114", GROUP="users", OWNER="root", MODE="0660", TAG+="uaccess"
KERNEL=="hiddev*", ATTRS{idVendor}=="05ac", ATTRS{idProduct}=="9243", GROUP="users", OWNER="root", MODE="0660", TAG+="uaccess"

# Apple Studio Display USB devices
SUBSYSTEM=="usb", ATTRS{idVendor}=="05ac", ATTRS{idProduct}=="1114", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="05ac", ATTRS{idProduct}=="9243", TAG+="uaccess"

# Apple Studio Display audio/video devices
SUBSYSTEM=="video4linux", ATTRS{idVendor}=="05ac", ATTRS{idProduct}=="1114", TAG+="uaccess"
SUBSYSTEM=="sound", ATTRS{idVendor}=="05ac", ATTRS{idProduct}=="1114", TAG+="uaccess"
EOF

    # Enhanced DisplayPort detection for Wayland
    cat > "${srcdir}/90-displayport-detection.rules" << 'EOF'
# Force DisplayPort detection on hotplug for Wayland compositors
SUBSYSTEM=="drm", ACTION=="change", ENV{HOTPLUG}=="1", RUN+="/bin/sh -c 'echo detect > /sys/class/drm/card*/status'"

# USB-C DisplayPort Alt Mode detection
SUBSYSTEM=="typec", ACTION=="add", ATTR{power_role}=="source", ATTR{data_role}=="host", RUN+="/bin/sh -c 'echo 1 > /sys/class/drm/card*/card*/drm/card*/status'"
EOF

    # Thunderbolt/USB4 auto-authorization for Apple displays
    cat > "${srcdir}/95-thunderbolt-apple-display.rules" << 'EOF'
# Auto-authorize Apple Studio Display via Thunderbolt/USB4
ACTION=="add", SUBSYSTEM=="thunderbolt", ATTR{vendor}=="0x1", ATTR{device}=="0x1114", ATTR{authorized}=="0", ATTR{authorized}="1"
ACTION=="add", SUBSYSTEM=="thunderbolt", ATTR{vendor}=="0x1", ATTR{device}=="0x9243", ATTR{authorized}=="0", ATTR{authorized}="1"
EOF

    # X11 display configuration for AMD GPU compatibility
    cat > "${srcdir}/apple-studio-display-x11.conf" << 'EOF'
# X11 DisplayPort configuration for Apple Studio Display - AMD GPU fix
Section "Device"
    Identifier "AMD"
    Driver "amdgpu"
    Option "DRI" "3"
    Option "TearFree" "true"
    Option "VariableRefresh" "false"
EndSection

Section "Monitor"
    Identifier "Studio Display"
    VendorName "Apple"
    ModelName "Studio Display"
    # Force stable 4K resolution instead of problematic 5K
    Modeline "3840x2160_60.00" 712.75 3840 4160 4576 5312 2160 2163 2168 2237 -hsync +vsync
    Option "PreferredMode" "3840x2160_60.00"
EndSection

Section "Screen"
    Identifier "Screen0"
    Device "AMD"
    Monitor "Studio Display"
    DefaultDepth 24
    SubSection "Display"
        Depth 24
        Modes "3840x2160_60.00" "2560x1440" "1920x1080"
    EndSubSection
EndSection
EOF

    # Wayland-specific monitor configuration helper
    cat > "${srcdir}/apple-studio-display-wayland-setup" << 'EOF'
#!/bin/bash
# Helper script for Apple Studio Display Wayland setup

# Check if running Wayland
if [ "$XDG_SESSION_TYPE" != "wayland" ]; then
    echo "This script is for Wayland sessions only"
    exit 1
fi

# Create monitors configuration directory if it doesn't exist
mkdir -p ~/.config/hypr/

# Create Apple Studio Display configuration for Hyprland with AMD GPU workaround
cat > ~/.config/hypr/apple-studio-display.conf << 'HYPR_EOF'
# Apple Studio Display configuration for Hyprland - AMD GPU compatible
# Use 4K resolution instead of 5K to avoid AMD driver issues
monitor=,3840x2160@60,auto,1.5

# Fallback to 1440p if 4K has issues
monitor=,2560x1440@60,auto,1.0

# Last resort fallback
monitor=,preferred,auto,1.0
HYPR_EOF

echo "Apple Studio Display Hyprland configuration created at ~/.config/hypr/apple-studio-display.conf"
echo "Add 'source = ~/.config/hypr/apple-studio-display.conf' to your hyprland.conf"
echo "Using 4K resolution to avoid AMD GPU flickering issues with 5K"
EOF

    cd "${srcdir}"
    git clone https://github.com/juliuszint/asdbctl.git
    cd asdbctl
    cargo build --release
}

package() {
    install -Dm644 "${srcdir}/50-apple-studio-display.rules" \
        "${pkgdir}/etc/udev/rules.d/50-apple-studio-display.rules"

    install -Dm644 "${srcdir}/90-displayport-detection.rules" \
        "${pkgdir}/etc/udev/rules.d/90-displayport-detection.rules"

    install -Dm644 "${srcdir}/95-thunderbolt-apple-display.rules" \
        "${pkgdir}/etc/udev/rules.d/95-thunderbolt-apple-display.rules"

    install -Dm644 "${srcdir}/apple-studio-display-x11.conf" \
        "${pkgdir}/etc/X11/xorg.conf.d/20-apple-studio-display.conf"

    install -Dm755 "${srcdir}/apple-studio-display-wayland-setup" \
        "${pkgdir}/usr/bin/apple-studio-display-wayland-setup"

    install -Dm755 "${srcdir}/asdbctl/target/release/asdbctl" \
        "${pkgdir}/usr/bin/asdbctl"

    ln -sf /usr/bin/asdbctl "${pkgdir}/usr/bin/apple-brightness"

    # Gentle display refresh script that mimics cable unplug/replug
    cat > "${srcdir}/studio-display-reset" << 'EOF'
#!/bin/bash
# Gentle Apple Studio Display refresh (mimics cable unplug/replug)

# Function to gently refresh display - only what cable unplug does
refresh_display() {
    echo "Refreshing Apple Studio Display..."

    # Find DisplayPort connections
    for connector in /sys/class/drm/card*/card*/status; do
        if [ -e "$connector" ]; then
            # Trigger hotplug detection (same as cable unplug/replug)
            echo detect > "$connector" 2>/dev/null || true
        fi
    done

    # Specifically for AMD GPU + Studio Display - force mode refresh
    if command -v xrandr >/dev/null 2>&1; then
        # Get current display and refresh it
        xrandr --output $(xrandr | grep " connected" | cut -d" " -f1) --mode 3840x2160 --rate 60 2>/dev/null || true
    fi

    echo "Display refresh completed"
}

case "$1" in
    reset|refresh)
        refresh_display
        ;;
    *)
        echo "Usage: $0 {reset|refresh}"
        echo "This script gently refreshes the display connection"
        ;;
esac
EOF

    install -Dm755 "${srcdir}/studio-display-reset" \
        "${pkgdir}/usr/bin/studio-display-reset"


    # GDM/SDDM configuration for stable Studio Display
    install -dm755 "${pkgdir}/var/lib/gdm/.config"
    cat > "${pkgdir}/var/lib/gdm/.config/monitors.xml" << 'EOF'
<monitors version="2">
  <configuration>
    <logicalmonitor>
      <x>0</x>
      <y>0</y>
      <scale>1.5</scale>
      <primary>yes</primary>
      <monitor>
        <monitorspec>
          <connector>Unknown</connector>
          <vendor>Apple</vendor>
          <product>Studio Display</product>
        </monitorspec>
        <mode>
          <width>3840</width>
          <height>2160</height>
          <rate>60</rate>
        </mode>
      </monitor>
    </logicalmonitor>
  </configuration>
</monitors>
EOF
}